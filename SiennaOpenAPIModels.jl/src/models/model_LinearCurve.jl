# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

@doc raw"""LinearCurve

    LinearCurve(;
        marginal_cost=nothing,
        no_load_cost=0.0,
    )

    - marginal_cost::Float64
    - no_load_cost::Float64
"""
Base.@kwdef mutable struct LinearCurve <: OpenAPI.APIModel
    marginal_cost::Union{Nothing, Float64} = nothing
    no_load_cost::Union{Nothing, Float64} = 0.0

    function LinearCurve(marginal_cost, no_load_cost)
        OpenAPI.validate_property(LinearCurve, Symbol("marginal_cost"), marginal_cost)
        OpenAPI.validate_property(LinearCurve, Symbol("no_load_cost"), no_load_cost)
        return new(marginal_cost, no_load_cost)
    end
end # type LinearCurve

const _property_types_LinearCurve = Dict{Symbol, String}(
    Symbol("marginal_cost") => "Float64",
    Symbol("no_load_cost") => "Float64",
)
OpenAPI.property_type(::Type{LinearCurve}, name::Symbol) =
    Union{Nothing, eval(Base.Meta.parse(_property_types_LinearCurve[name]))}

function check_required(o::LinearCurve)
    o.marginal_cost === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{LinearCurve}, name::Symbol, val)
end
