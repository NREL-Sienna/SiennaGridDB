# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ConstantReserveGroup

    ConstantReserveGroup(;
        available=nothing,
        id=nothing,
        name=nothing,
        requirement=nothing,
    )

    - available::Bool
    - id::Int64
    - name::String
    - requirement::Float64
"""
Base.@kwdef mutable struct ConstantReserveGroup <: OpenAPI.APIModel
    available::Union{Nothing,Bool} = nothing
    id::Union{Nothing,Int64} = nothing
    name::Union{Nothing,String} = nothing
    requirement::Union{Nothing,Float64} = nothing

    function ConstantReserveGroup(available, id, name, requirement)
        OpenAPI.validate_property(ConstantReserveGroup, Symbol("available"), available)
        OpenAPI.validate_property(ConstantReserveGroup, Symbol("id"), id)
        OpenAPI.validate_property(ConstantReserveGroup, Symbol("name"), name)
        OpenAPI.validate_property(ConstantReserveGroup, Symbol("requirement"), requirement)
        return new(available, id, name, requirement)
    end
end # type ConstantReserveGroup

const _property_types_ConstantReserveGroup = Dict{Symbol,String}(
    Symbol("available") => "Bool",
    Symbol("id") => "Int64",
    Symbol("name") => "String",
    Symbol("requirement") => "Float64",
)
OpenAPI.property_type(::Type{ConstantReserveGroup}, name::Symbol) =
    Union{Nothing,eval(Base.Meta.parse(_property_types_ConstantReserveGroup[name]))}

function check_required(o::ConstantReserveGroup)
    o.available === nothing && (return false)
    o.id === nothing && (return false)
    o.name === nothing && (return false)
    o.requirement === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ConstantReserveGroup}, name::Symbol, val)




end
