# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""EnergyReservoirStorage_operation_cost_start_up_oneOf

    EnergyReservoirStorageOperationCostStartUpOneOf(;
        charge=nothing,
        discharge=nothing,
    )

    - charge::Float64
    - discharge::Float64
"""
Base.@kwdef mutable struct EnergyReservoirStorageOperationCostStartUpOneOf <:
                           OpenAPI.APIModel
    charge::Union{Nothing,Float64} = nothing
    discharge::Union{Nothing,Float64} = nothing

    function EnergyReservoirStorageOperationCostStartUpOneOf(charge, discharge)
        OpenAPI.validate_property(
            EnergyReservoirStorageOperationCostStartUpOneOf,
            Symbol("charge"),
            charge,
        )
        OpenAPI.validate_property(
            EnergyReservoirStorageOperationCostStartUpOneOf,
            Symbol("discharge"),
            discharge,
        )
        return new(charge, discharge)
    end
end # type EnergyReservoirStorageOperationCostStartUpOneOf

const _property_types_EnergyReservoirStorageOperationCostStartUpOneOf =
    Dict{Symbol,String}(Symbol("charge") => "Float64", Symbol("discharge") => "Float64")
OpenAPI.property_type(
    ::Type{EnergyReservoirStorageOperationCostStartUpOneOf},
    name::Symbol,
) = Union{
    Nothing,
    eval(
        Base.Meta.parse(
            _property_types_EnergyReservoirStorageOperationCostStartUpOneOf[name],
        ),
    ),
}

function check_required(o::EnergyReservoirStorageOperationCostStartUpOneOf)
    true
end

function OpenAPI.validate_property(
    ::Type{EnergyReservoirStorageOperationCostStartUpOneOf},
    name::Symbol,
    val,
)


end
