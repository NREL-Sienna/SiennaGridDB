# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""InterruptiblePowerLoad_operation_cost
Cost representation for controllable load units

    InterruptiblePowerLoadOperationCost(;
        fixed=0.0,
        variable=nothing,
    )

    - fixed::Float64
    - variable::CostCurve
"""
Base.@kwdef mutable struct InterruptiblePowerLoadOperationCost <: OpenAPI.APIModel
    fixed::Union{Nothing,Float64} = 0.0
    variable = nothing # spec type: Union{ Nothing, CostCurve }

    function InterruptiblePowerLoadOperationCost(fixed, variable)
        OpenAPI.validate_property(
            InterruptiblePowerLoadOperationCost,
            Symbol("fixed"),
            fixed,
        )
        OpenAPI.validate_property(
            InterruptiblePowerLoadOperationCost,
            Symbol("variable"),
            variable,
        )
        return new(fixed, variable)
    end
end # type InterruptiblePowerLoadOperationCost

const _property_types_InterruptiblePowerLoadOperationCost =
    Dict{Symbol,String}(Symbol("fixed") => "Float64", Symbol("variable") => "CostCurve")
OpenAPI.property_type(::Type{InterruptiblePowerLoadOperationCost}, name::Symbol) = Union{
    Nothing,
    eval(Base.Meta.parse(_property_types_InterruptiblePowerLoadOperationCost[name])),
}

function check_required(o::InterruptiblePowerLoadOperationCost)
    o.variable === nothing && (return false)
    true
end

function OpenAPI.validate_property(
    ::Type{InterruptiblePowerLoadOperationCost},
    name::Symbol,
    val,
)


end
