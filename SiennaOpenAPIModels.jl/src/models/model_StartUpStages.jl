# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""StartUpStages

    StartUpStages(;
        hot=nothing,
        warm=nothing,
        cold=nothing,
    )

    - hot::Float64
    - warm::Float64
    - cold::Float64
"""
Base.@kwdef mutable struct StartUpStages <: OpenAPI.APIModel
    hot::Union{Nothing,Float64} = nothing
    warm::Union{Nothing,Float64} = nothing
    cold::Union{Nothing,Float64} = nothing

    function StartUpStages(hot, warm, cold)
        OpenAPI.validate_property(StartUpStages, Symbol("hot"), hot)
        OpenAPI.validate_property(StartUpStages, Symbol("warm"), warm)
        OpenAPI.validate_property(StartUpStages, Symbol("cold"), cold)
        return new(hot, warm, cold)
    end
end # type StartUpStages

const _property_types_StartUpStages = Dict{Symbol,String}(
    Symbol("hot") => "Float64",
    Symbol("warm") => "Float64",
    Symbol("cold") => "Float64",
)
OpenAPI.property_type(::Type{StartUpStages}, name::Symbol) =
    Union{Nothing,eval(Base.Meta.parse(_property_types_StartUpStages[name]))}

function check_required(o::StartUpStages)
    o.hot === nothing && (return false)
    o.warm === nothing && (return false)
    o.cold === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{StartUpStages}, name::Symbol, val) end
