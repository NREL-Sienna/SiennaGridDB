# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

@doc raw"""TurbinePump

    TurbinePump(;
        turbine=nothing,
        pump=nothing,
    )

    - turbine::Float64
    - pump::Float64
"""
Base.@kwdef mutable struct TurbinePump <: OpenAPI.APIModel
    turbine::Union{Nothing, Float64} = nothing
    pump::Union{Nothing, Float64} = nothing

    function TurbinePump(turbine, pump)
        o = new(turbine, pump)
        OpenAPI.validate_properties(o)
        return o
    end
end # type TurbinePump

const _property_types_TurbinePump =
    Dict{Symbol, String}(Symbol("turbine") => "Float64", Symbol("pump") => "Float64")
OpenAPI.property_type(::Type{TurbinePump}, name::Symbol) =
    Union{Nothing, eval(Base.Meta.parse(_property_types_TurbinePump[name]))}

function OpenAPI.check_required(o::TurbinePump)
    o.turbine === nothing && (return false)
    o.pump === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::TurbinePump)
    OpenAPI.validate_property(TurbinePump, Symbol("turbine"), o.turbine)
    OpenAPI.validate_property(TurbinePump, Symbol("pump"), o.pump)
end

function OpenAPI.validate_property(::Type{TurbinePump}, name::Symbol, val) end
