# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

@doc raw"""QuadraticCurve

    QuadraticCurve(;
        curve_type="QUADRATIC",
        quadratic_term=nothing,
        proportional_term=nothing,
        constant_term=nothing,
    )

    - curve_type::String
    - quadratic_term::Float64
    - proportional_term::Float64
    - constant_term::Float64
"""
Base.@kwdef mutable struct QuadraticCurve <: OpenAPI.APIModel
    curve_type::Union{Nothing, String} = "QUADRATIC"
    quadratic_term::Union{Nothing, Float64} = nothing
    proportional_term::Union{Nothing, Float64} = nothing
    constant_term::Union{Nothing, Float64} = nothing

    function QuadraticCurve(curve_type, quadratic_term, proportional_term, constant_term)
        OpenAPI.validate_property(QuadraticCurve, Symbol("curve_type"), curve_type)
        OpenAPI.validate_property(QuadraticCurve, Symbol("quadratic_term"), quadratic_term)
        OpenAPI.validate_property(
            QuadraticCurve,
            Symbol("proportional_term"),
            proportional_term,
        )
        OpenAPI.validate_property(QuadraticCurve, Symbol("constant_term"), constant_term)
        return new(curve_type, quadratic_term, proportional_term, constant_term)
    end
end # type QuadraticCurve

const _property_types_QuadraticCurve = Dict{Symbol, String}(
    Symbol("curve_type") => "String",
    Symbol("quadratic_term") => "Float64",
    Symbol("proportional_term") => "Float64",
    Symbol("constant_term") => "Float64",
)
OpenAPI.property_type(::Type{QuadraticCurve}, name::Symbol) =
    Union{Nothing, eval(Base.Meta.parse(_property_types_QuadraticCurve[name]))}

function check_required(o::QuadraticCurve)
    o.curve_type === nothing && (return false)
    o.quadratic_term === nothing && (return false)
    o.proportional_term === nothing && (return false)
    o.constant_term === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{QuadraticCurve}, name::Symbol, val)
    if name === Symbol("curve_type")
        OpenAPI.validate_param(name, "QuadraticCurve", :enum, val, ["QUADRATIC"])
    end
end
