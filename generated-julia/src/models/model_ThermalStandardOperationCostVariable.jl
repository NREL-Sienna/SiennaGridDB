# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.



@doc raw"""ThermalStandard_operation_cost_variable

    ThermalStandardOperationCostVariable(; value=nothing)
"""
mutable struct ThermalStandardOperationCostVariable <: OpenAPI.OneOfAPIModel
    value::Any # Union{ CostCurve, FuelCurve }
    ThermalStandardOperationCostVariable() = new()
    ThermalStandardOperationCostVariable(value) = new(value)
end # type ThermalStandardOperationCostVariable

function OpenAPI.property_type(::Type{ ThermalStandardOperationCostVariable }, name::Symbol, json::Dict{String,Any})
    discriminator = json["variable_cost_type"]
    if discriminator == "COST"
        return eval(Base.Meta.parse("CostCurve"))
    elseif discriminator == "FUEL"
        return eval(Base.Meta.parse("FuelCurve"))
    end
    throw(OpenAPI.ValidationException("Invalid discriminator value: $discriminator for ThermalStandardOperationCostVariable"))
end
